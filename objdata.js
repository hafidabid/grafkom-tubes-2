let positions = [
    /* TOP */
    // top
    // left
    -0.5, 0.5, -0.5,
    -0.4, 0.5, -0.4,
    -0.5, 0.5, 0.5,

    -0.5, 0.5, 0.5,
    -0.4, 0.5, -0.4,
    -0.4, 0.5, 0.4,

    // right
    0.4, 0.5, -0.4,
    0.5, 0.5, -0.5,
    0.5, 0.5, 0.5,

    0.4, 0.5, -0.4,
    0.5, 0.5, 0.5,
    0.4, 0.5, 0.4,

    // back
    -0.4, 0.5, -0.4,
    -0.5, 0.5, -0.5,
    0.4, 0.5, -0.4,

    -0.5, 0.5, -0.5,
    0.5, 0.5, -0.5,
    0.4, 0.5, -0.4,

    // front
    -0.5, 0.5, 0.5,
    -0.4, 0.5, 0.4,
    0.4, 0.5, 0.4,    

    0.5, 0.5, 0.5,
    -0.5, 0.5, 0.5,
    0.4, 0.5, 0.4,

    // bottom
    // left
    -0.4, 0.4, -0.4,
    -0.5, 0.4, -0.5,
    -0.5, 0.4, 0.5,

    -0.4, 0.4, -0.4,
    -0.5, 0.4, 0.5,
    -0.4, 0.4, 0.4,

    // right
    0.5, 0.4, -0.5,
    0.4, 0.4, -0.4,
    0.5, 0.4, 0.5,

    0.5, 0.4, 0.5,
    0.4, 0.4, -0.4,
    0.4, 0.4, 0.4,

    // back
    -0.5, 0.4, -0.5,
    -0.4, 0.4, -0.4,
    0.4, 0.4, -0.4,

    0.5, 0.4, -0.5,
    -0.5, 0.4, -0.5,
    0.4, 0.4, -0.4,

    // front
    -0.4, 0.4, 0.4,
    -0.5, 0.4, 0.5,
    0.4, 0.4, 0.4,    

    -0.5, 0.4, 0.5,
    0.5, 0.4, 0.5,
    0.4, 0.4, 0.4,

    // inside
    // right
    0.4, 0.4, -0.4,
    0.4, 0.5, 0.4,
    0.4, 0.4, 0.4,

    0.4, 0.4, -0.4,
    0.4, 0.5, -0.4,
    0.4, 0.5, 0.4,

    // left
    -0.4, 0.5, 0.4,
    -0.4, 0.4, -0.4,
    -0.4, 0.4, 0.4,

    -0.4, 0.5, -0.4,
    -0.4, 0.4, -0.4,
    -0.4, 0.5, 0.4,

    // front
    -0.4, 0.5, 0.4,
    -0.4, 0.4, 0.4,
    0.4, 0.5, 0.4,

    0.4, 0.5, 0.4,
    -0.4, 0.4, 0.4,
    0.4, 0.4, 0.4,

    // back
    -0.4, 0.4, -0.4,
    -0.4, 0.5, -0.4,
    0.4, 0.5, -0.4,

    -0.4, 0.4, -0.4,
    0.4, 0.5, -0.4,
    0.4, 0.4, -0.4,

    // outside
    // right
    0.5, 0.5, -0.5,
    0.5, 0.4, -0.5,
    0.5, 0.5, 0.5,

    0.5, 0.5, 0.5,
    0.5, 0.4, -0.5,
    0.5, 0.4, 0.5,

    // // left
    -0.5, 0.4, -0.5,
    -0.5, 0.5, -0.5,
    -0.5, 0.5, 0.5,

    -0.5, 0.4, -0.5,
    -0.5, 0.5, 0.5,
    -0.5, 0.4, 0.5,

    // front
    -0.5, 0.4, 0.5,
    -0.5, 0.5, 0.5,
    0.5, 0.5, 0.5,

    -0.5, 0.4, 0.5,
    0.5, 0.5, 0.5,
    0.5, 0.4, 0.5,

    // back
    -0.5, 0.5, -0.5,
    -0.5, 0.4, -0.5,
    0.5, 0.5, -0.5,

    0.5, 0.5, -0.5,
    -0.5, 0.4, -0.5,
    0.5, 0.4, -0.5,
    
    /* BOTTOM */
    // top
    // left
    -0.4, -0.5, -0.4,
    -0.5, -0.5, -0.5,
    -0.5, -0.5, 0.5,

    -0.4, -0.5, -0.4,
    -0.5, -0.5, 0.5,
    -0.4, -0.5, 0.4,

    // right
    0.5, -0.5, -0.5,
    0.4, -0.5, -0.4,
    0.5, -0.5, 0.5,

    0.5, -0.5, 0.5,
    0.4, -0.5, -0.4,
    0.4, -0.5, 0.4,

    // back
    -0.5, -0.5, -0.5,
    -0.4, -0.5, -0.4,
    0.4, -0.5, -0.4,

    0.5, -0.5, -0.5,
    -0.5, -0.5, -0.5,
    0.4, -0.5, -0.4,

    // front
    -0.4, -0.5, 0.4,
    -0.5, -0.5, 0.5,
    0.4, -0.5, 0.4,    

    -0.5, -0.5, 0.5,
    0.5, -0.5, 0.5,
    0.4, -0.5, 0.4,

    // bottom
    // left
    -0.5, -0.4, -0.5,
    -0.4, -0.4, -0.4,
    -0.5, -0.4, 0.5,

    -0.5, -0.4, 0.5,
    -0.4, -0.4, -0.4,
    -0.4, -0.4, 0.4,

    // right
    0.4, -0.4, -0.4,
    0.5, -0.4, -0.5,
    0.5, -0.4, 0.5,

    0.4, -0.4, -0.4,
    0.5, -0.4, 0.5,
    0.4, -0.4, 0.4,

    // back
    -0.4, -0.4, -0.4,
    -0.5, -0.4, -0.5,
    0.4, -0.4, -0.4,

    -0.5, -0.4, -0.5,
    0.5, -0.4, -0.5,
    0.4, -0.4, -0.4,

    // front
    -0.5, -0.4, 0.5,
    -0.4, -0.4, 0.4,
    0.4, -0.4, 0.4,    

    0.5, -0.4, 0.5,
    -0.5, -0.4, 0.5,
    0.4, -0.4, 0.4,

    // inside
    // right
    0.4, -0.5, 0.4,
    0.4, -0.4, -0.4,
    0.4, -0.4, 0.4,

    0.4, -0.5, -0.4,
    0.4, -0.4, -0.4,
    0.4, -0.5, 0.4,

    // left
    -0.4, -0.4, -0.4,
    -0.4, -0.5, 0.4,
    -0.4, -0.4, 0.4,

    -0.4, -0.4, -0.4,
    -0.4, -0.5, -0.4,
    -0.4, -0.5, 0.4,

    // front
    -0.4, -0.4, 0.4,
    -0.4, -0.5, 0.4,
    0.4, -0.5, 0.4,

    -0.4, -0.4, 0.4,
    0.4, -0.5, 0.4,
    0.4, -0.4, 0.4,

    // back
    -0.4, -0.5, -0.4,
    -0.4, -0.4, -0.4,
    0.4, -0.5, -0.4,

    0.4, -0.5, -0.4,
    -0.4, -0.4, -0.4,
    0.4, -0.4, -0.4,

    // outside
    // right
    0.5, -0.4, -0.5,
    0.5, -0.5, -0.5,
    0.5, -0.5, 0.5,

    0.5, -0.4, -0.5,
    0.5, -0.5, 0.5,
    0.5, -0.4, 0.5,

    // // left
    -0.5, -0.5, -0.5,
    -0.5, -0.4, -0.5,
    -0.5, -0.5, 0.5,

    -0.5, -0.5, 0.5,
    -0.5, -0.4, -0.5,
    -0.5, -0.4, 0.5,

    // front
    -0.5, -0.5, 0.5,
    -0.5, -0.4, 0.5,
    0.5, -0.5, 0.5,

    0.5, -0.5, 0.5,
    -0.5, -0.4, 0.5,
    0.5, -0.4, 0.5,

    // back
    -0.5, -0.4, -0.5,
    -0.5, -0.5, -0.5,
    0.5, -0.5, -0.5,

    -0.5, -0.4, -0.5,
    0.5, -0.5, -0.5,
    0.5, -0.4, -0.5,

    // RIGHT FRONT PILLAR
    // right
    0.5, -0.4, 0.5,
    0.5, 0.4, 0.5,
    0.5, -0.4, 0.4,

    0.5, 0.4, 0.5,
    0.5, 0.4, 0.4,
    0.5, -0.4, 0.4,

    // left
    0.4, -0.4, 0.4, 
    0.4, 0.4, 0.4, 
    0.4, -0.4, 0.5, 

    0.4, 0.4, 0.4, 
    0.4, 0.4, 0.5, 
    0.4, -0.4, 0.5, 

    // front
    0.4, -0.4, 0.5,
    0.4, 0.4, 0.5,
    0.5, -0.4, 0.5,

    0.5, -0.4, 0.5, 
    0.4, 0.4, 0.5, 
    0.5, 0.4, 0.5,

    // back
    0.4, 0.4, 0.4,
    0.4, -0.4, 0.4,
    0.5, -0.4, 0.4,

    0.4, 0.4, 0.4, 
    0.5, -0.4, 0.4, 
    0.5, 0.4, 0.4,

    // RIGHT BACK PILLAR
    // right
    0.5, -0.4, -0.4,
    0.5, 0.4, -0.4,
    0.5, -0.4, -0.5,

    0.5, 0.4, -0.4,
    0.5, 0.4, -0.5,
    0.5, -0.4, -0.5,

    // left
    0.4, -0.4, -0.5, 
    0.4, 0.4, -0.5, 
    0.4, -0.4, -0.4, 

    0.4, 0.4, -0.5, 
    0.4, 0.4, -0.4, 
    0.4, -0.4, -0.4, 

    // front
    0.4, -0.4, -0.4,
    0.4, 0.4, -0.4,
    0.5, -0.4, -0.4,

    0.4, 0.4, -0.4, 
    0.5, 0.4, -0.4,
    0.5, -0.4, -0.4, 

    // back
    0.4, 0.4, -0.5,
    0.4, -0.4, -0.5,
    0.5, -0.4, -0.5,

    0.5, 0.4, -0.5,
    0.4, 0.4, -0.5, 
    0.5, -0.4, -0.5, 

    // LEFT FRONT PILLAR
    // left
    -0.5, -0.4, 0.5,
    -0.5, -0.4, 0.4,
    -0.5, 0.4, 0.5,

    -0.5, 0.4, 0.4,
    -0.5, 0.4, 0.5,
    -0.5, -0.4, 0.4,

    // right
    -0.4, 0.4, 0.4, 
    -0.4, -0.4, 0.4, 
    -0.4, -0.4, 0.5, 

    -0.4, 0.4, 0.5, 
    -0.4, 0.4, 0.4, 
    -0.4, -0.4, 0.5, 

    // front
    -0.4, 0.4, 0.5,
    -0.4, -0.4, 0.5,
    -0.5, -0.4, 0.5,

    -0.4, 0.4, 0.5, 
    -0.5, -0.4, 0.5, 
    -0.5, 0.4, 0.5,

    // back
    -0.4, -0.4, 0.4,
    -0.4, 0.4, 0.4,
    -0.5, -0.4, 0.4,

    -0.5, -0.4, 0.4, 
    -0.4, 0.4, 0.4, 
    -0.5, 0.4, 0.4,

    // LEFT BACK PILLAR
    // left
    -0.5, 0.4, -0.4,
    -0.5, -0.4, -0.4,
    -0.5, -0.4, -0.5,

    -0.5, 0.4, -0.5,
    -0.5, 0.4, -0.4,
    -0.5, -0.4, -0.5,

    // right
    -0.4, 0.4, -0.5, 
    -0.4, -0.4, -0.5, 
    -0.4, -0.4, -0.4, 

    -0.4, 0.4, -0.4, 
    -0.4, 0.4, -0.5, 
    -0.4, -0.4, -0.4, 

    // front
    -0.4, 0.4, -0.4,
    -0.4, -0.4, -0.4,
    -0.5, -0.4, -0.4,

    -0.5, -0.4, -0.4, 
    -0.5, 0.4, -0.4,
    -0.4, 0.4, -0.4, 

    // back
    -0.4, -0.4, -0.5,
    -0.4, 0.4, -0.5,
    -0.5, -0.4, -0.5,

    -0.5, -0.4, -0.5, 
    -0.4, 0.4, -0.5, 
    -0.5, 0.4, -0.5,
];

const  normals = [
    /* TOP */
    // top
    // left
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // right
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // back
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // front
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // bottom
    // left
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // right
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // back
     0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // front
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // inside
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    /// front
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // back
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // outside
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    /// front
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // back
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    
    /* BOTTOM */
    // bottom
    // left
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // right
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // back
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // front
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // top
    // left
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // right
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // back
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,

    // front
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,


    // inside
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    /// front
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    // back
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // outside
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    /// front
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // back
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // RIGHT FRONT PILLAR
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    /// front
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // back
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // RIGHT BACK PILLAR
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    /// front
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // back
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,

    // LEFT FRONT PILLAR
    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0, 
    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0, 

     /// front
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
 
     // back
    0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,

    // LEFT BACK PILLAR
    // left
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0, 

    // right
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0, 

     /// front
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
 
     // back
    0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
     0, 0, 1,
]

const colors = [1, 0.6, 0.7058823529411764, 1]


//Loading file
const readfile = ()=> {
    var file = document.getElementById("inputFile").files[0]
    var reader = new FileReader();
    reader.onload = function(e){
        

        renderEngine(gl, program, normals, normalAttLoc, colors, translation, rotation, scaling, rotation)
    }
    
    reader.readAsText(file);
    if (!file) {
        alert('Cannot proceed empty file')
    }
}